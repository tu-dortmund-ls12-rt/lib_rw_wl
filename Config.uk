config SOFTONLYWEARLEVELINGLIB
    bool "so_wl: Provides functionality for software only in memory wear leveling"
    default n
    depends on (ARCH_ARM_64)
    select FORWARD_PAGEFAULT
    select FORWARD_DEBUG_BREAKPOINT
    select SEPARATE_CODE_LINKING

if (SOFTONLYWEARLEVELINGLIB)

menu "Functionalities"

config SOFTONLYWEARLEVELINGLIB_DO_WRITE_MONITORING
    bool "so_wl_write_monitoring: Determines if write minitoring is performed at all"
    default y

config SOFTONLYWEARLEVELINGLIB_DO_READ_MONITORING
    bool "so_wl_read_monitoring: Determines if read minitoring is performed at all"
    default y

config SOFTONLYWEARLEVELINGLIB_DO_WRITE_LEVELING
    bool "so_wl_write_leveling: Determines if write wear leveling is performed"
    default y
    select SOFTONLYWEARLEVELINGLIB_DO_WRITE_MONITORING

config SOFTONLYWEARLEVELINGLIB_DO_READ_LEVELING
    bool "so_wl_read_leveling: Determines if read leveling is performed"
    default y
    select SOFTONLYWEARLEVELINGLIB_DO_READ_MONITORING

config SOFTONLYWEARLEVELINGLIB_DO_STACK_SPINNING
    bool "so_wl_stack_spinning: Performs software level stack spinning"
    default y
    select SEPARATE_STACK_PAGETABLES
    select SOFTONLYWEARLEVELINGLIB_DO_WRITE_MONITORING

config SOFTONLYWEARLEVELINGLIB_DO_STACK_POINTER_RELOCATION
    bool "so_wl_pointer_relocation: Performs pointer relocation for pointers into the stack"
    default y
    select SOFTONLYWEARLEVELINGLIB_DO_STACK_SPINNING

config SOFTONLYWEARLEVELINGLIB_DO_TEXT_SPINNING
    bool "so_wl_text_spinning: Performs software level code segment spinning"
    default y
    select SEPARATE_TEXT_PAGETABLES
    select SOFTONLYWEARLEVELINGLIB_DO_WRITE_MONITORING

config SOFTONLYWEARLEVELINGLIB_DO_TEXT_PAGE_CONSITENCY
    bool "so_wl_text_page_consistency: Use the entire VM space (48bit) to maintain consistency accross movements"
    default y
    select SOFTONLYWEARLEVELINGLIB_DO_TEXT_SPINNING

endmenu

if (SOFTONLYWEARLEVELINGLIB_DO_WRITE_MONITORING)

menu "Access Approximation"

config SOFTONLYWEARLEVELINGLIB_WRITE_SAMPLING_RATE
    int "so_wl_sampling_rate: Determines in what distance the memory accesses are sampled to approximate the access distribution"
    default 5000

config SOFTONLYWEARLEVELINGLIB_READ_SAMPLING_RATE
    int "so_wl_read_sampling_rate: Determines in what distance the memory accesses are sampled to approximate the access distribution"
    default 30000

config SOFTONLYWEARLEVELINGLIB_MONITOR_CAPACITY
    int "so_wl_monitor_capacity: Defines the storage capacity for access approximations"
    default 256

config SOFTONLYWEARLEVELINGLIB_WRITE_NOTIFY_THRESHOLD
    int "so_wl_notify_threshold: Defines at which count of approximated writes the WL should be triggered"
    default 32

config SOFTONLYWEARLEVELINGLIB_STACK_NOTIFY_THRESHOLD
    int "so_wl_stack_notify_threshold: Defines at which count of approximated writes the Stack spinning should be triggered"
    default 1

config SOFTONLYWEARLEVELINGLIB_TEXT_NOTIFY_THRESHOLD
    int "so_wl_text_notify_threshold: Defines at which count of approximated writes the text spinning should be triggered"
    default 1

config SOFTONLYWEARLEVELINGLIB_STACK_MOVEMENT_STEP
    int "so_wl_stack_movement: Defines the width of stack spinning"
    default 64

config SOFTONLYWEARLEVELINGLIB_TEXT_MOVEMENT_STEP
    int "so_wl_text_movement: Defines the width of text spinning"
    default 64

config SOFTONLYWEARLEVELINGLIB_PLOT_APPROXIMATION_RESULTS
    bool "so_wl_plot_approx_results: Selects if the approximation results should be printed out after the appliction completes"
    default n

endmenu

endif

menu "Options"

config SOFTONLYWEARLEVELINGLIB_LOGGING
    bool "so_wl_logging: Determines if logging outputs are made for the wear leveling lib"
    default n

endmenu

endif
